name: 🚀 Fast Tests (Stage 1)

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  fast-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 🔍 Debug Environment
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Working directory: $(pwd)"
        echo "Files in root: $(ls -la)"
        echo "Package.json exists: $(test -f package.json && echo "Yes" || echo "No")"

    - name: 📥 Install dependencies
      run: npm ci --legacy-peer-deps

    - name: 🔍 Post-install debug
      run: |
        echo "Node modules exists: $(test -d node_modules && echo "Yes" || echo "No")"
        echo "Prisma client exists: $(test -d node_modules/@prisma/client && echo "Yes" || echo "No")"

    - name: 🔍 Type checking
      run: npm run type-check

    - name: 🧹 Lint code
      run: npm run lint:ci

    - name: ⚡ Run fast tests
      run: npm run test:ci:fast

  security-check:
    runs-on: ubuntu-latest
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci --legacy-peer-deps

    - name: 🔒 Run security audit
      run: npm audit --audit-level=moderate

    - name: 🔍 Check for vulnerabilities
      run: npm audit --audit-level=high --production 