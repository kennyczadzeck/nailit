name: 🔄 Integration Tests (Stage 2)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    needs: [] # Runs in parallel with fast-tests for PRs
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nailit_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🗄️ Setup test database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nailit_test
      run: |
        npx prisma db push --force-reset
        npm run db:seed

    - name: 🔗 Run integration tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nailit_test
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
      run: npm run test:ci:integration

    - name: 📊 Upload integration test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: |
          coverage/
          test-results/

  bdd-tests:
    runs-on: ubuntu-latest
    needs: [] # Runs in parallel
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🎭 Run BDD feature tests
      env:
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
      run: npm run test:bdd

    - name: 📊 Upload BDD test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bdd-test-results
        path: |
          coverage/
          test-results/

  feature-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [auth, projects, api, components]
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🎯 Run ${{ matrix.feature }} feature tests
      env:
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
      run: npm run test:feature:${{ matrix.feature }}

    - name: 📊 Upload feature test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: feature-test-results-${{ matrix.feature }}
        path: |
          coverage/
          test-results/ 