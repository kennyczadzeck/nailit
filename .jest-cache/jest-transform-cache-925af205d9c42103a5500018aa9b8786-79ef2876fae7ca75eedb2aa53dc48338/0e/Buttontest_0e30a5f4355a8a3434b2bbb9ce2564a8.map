{"version":3,"sources":["/Users/kennyc/code/personal/nailit/tests/unit/components/Button.test.tsx"],"sourcesContent":["/**\n * Unit Tests for Button Component\n * Tests component behavior with centralized fixtures\n */\n\nimport React from 'react'\nimport { render, screen, fireEvent } from '@testing-library/react'\nimport { Button } from '../../../app/components/ui/Button'\n\n// Use centralized fixtures for consistent test patterns\nimport { testPatterns } from '../../fixtures'\n\ndescribe('Button Component', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  describe('Basic rendering', () => {\n    test('renders with default props', () => {\n      render(<Button>Click me</Button>)\n      \n      const button = screen.getByRole('button', { name: /click me/i })\n      expect(button).toBeInTheDocument()\n      expect(button).toHaveClass('bg-[#34A853]') // primary variant\n      expect(button).toHaveClass('px-4', 'py-2') // md size\n    })\n\n    test('renders with different variants', () => {\n      const { rerender } = render(<Button variant=\"secondary\">Secondary</Button>)\n      expect(screen.getByRole('button')).toHaveClass('bg-[#1A73E8]')\n\n      rerender(<Button variant=\"outline\">Outline</Button>)\n      expect(screen.getByRole('button')).toHaveClass('border', 'border-gray-300')\n\n      rerender(<Button variant=\"ghost\">Ghost</Button>)\n      expect(screen.getByRole('button')).toHaveClass('text-gray-700', 'hover:bg-gray-100')\n    })\n\n    test('renders with different sizes', () => {\n      const { rerender } = render(<Button size=\"sm\">Small</Button>)\n      expect(screen.getByRole('button')).toHaveClass('px-3', 'py-1.5', 'text-sm')\n\n      rerender(<Button size=\"lg\">Large</Button>)\n      expect(screen.getByRole('button')).toHaveClass('px-6', 'py-3', 'text-base')\n    })\n\n    test('applies custom className', () => {\n      render(<Button className=\"custom-class\">Custom</Button>)\n      expect(screen.getByRole('button')).toHaveClass('custom-class')\n    })\n  })\n\n  describe('Interactive behavior', () => {\n    test('handles click events', () => {\n      const handleClick = jest.fn()\n      render(<Button onClick={handleClick}>Clickable</Button>)\n      \n      fireEvent.click(screen.getByRole('button'))\n      expect(handleClick).toHaveBeenCalledTimes(1)\n    })\n\n    test('passes through HTML button attributes', () => {\n      render(<Button disabled type=\"submit\" data-testid=\"submit-btn\">Submit</Button>)\n      \n      const button = screen.getByTestId('submit-btn')\n      expect(button).toBeDisabled()\n      expect(button).toHaveAttribute('type', 'submit')\n    })\n\n    test('applies disabled styles when disabled', () => {\n      render(<Button disabled>Disabled</Button>)\n      \n      const button = screen.getByRole('button')\n      expect(button).toBeDisabled()\n      expect(button).toHaveClass('disabled:opacity-50', 'disabled:pointer-events-none')\n    })\n  })\n\n  describe('Accessibility', () => {\n    test('has proper accessibility attributes', () => {\n      render(<Button>Accessible Button</Button>)\n      \n      const button = screen.getByRole('button')\n      expect(button).toHaveClass('focus:outline-none', 'focus:ring-2', 'focus:ring-offset-2')\n    })\n\n    test('preserves custom attributes', () => {\n      render(\n        <Button data-testid=\"custom-button\" aria-label=\"Custom button\">\n          Button\n        </Button>\n      )\n      \n      const button = screen.getByTestId('custom-button')\n      expect(button).toHaveAttribute('aria-label', 'Custom button')\n    })\n  })\n\n  describe('Text pattern validation using centralized fixtures', () => {\n    test('button text follows expected patterns', () => {\n      const buttonTexts = ['Create', 'Save', 'Cancel', 'Delete', 'Edit']\n      \n      buttonTexts.forEach(text => {\n        expect(text).toMatch(testPatterns.ui.buttonText)\n      })\n    })\n\n    test('can render buttons with standard action text', () => {\n      const standardActions = ['Create', 'Save', 'Cancel']\n      \n      standardActions.forEach(action => {\n        render(<Button>{action}</Button>)\n        expect(screen.getByRole('button', { name: action })).toBeInTheDocument()\n      })\n    })\n  })\n}) "],"names":["describe","beforeEach","jest","clearAllMocks","test","render","Button","button","screen","getByRole","name","expect","toBeInTheDocument","toHaveClass","rerender","variant","size","className","handleClick","fn","onClick","fireEvent","click","toHaveBeenCalledTimes","disabled","type","data-testid","getByTestId","toBeDisabled","toHaveAttribute","aria-label","buttonTexts","forEach","text","toMatch","testPatterns","ui","buttonText","standardActions","action"],"mappings":"AAAA;;;CAGC;;;;;8DAEiB;wBACwB;wBACnB;0BAGM;;;;;;AAE7BA,SAAS,oBAAoB;IAC3BC,WAAW;QACTC,KAAKC,aAAa;IACpB;IAEAH,SAAS,mBAAmB;QAC1BI,KAAK,8BAA8B;YACjCC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;0BAAC;;YAEf,MAAMC,SAASC,cAAM,CAACC,SAAS,CAAC,UAAU;gBAAEC,MAAM;YAAY;YAC9DC,OAAOJ,QAAQK,iBAAiB;YAChCD,OAAOJ,QAAQM,WAAW,CAAC,gBAAgB,kBAAkB;;YAC7DF,OAAOJ,QAAQM,WAAW,CAAC,QAAQ,QAAQ,UAAU;;QACvD;QAEAT,KAAK,mCAAmC;YACtC,MAAM,EAAEU,QAAQ,EAAE,GAAGT,IAAAA,cAAM,gBAAC,qBAACC,cAAM;gBAACS,SAAQ;0BAAY;;YACxDJ,OAAOH,cAAM,CAACC,SAAS,CAAC,WAAWI,WAAW,CAAC;YAE/CC,uBAAS,qBAACR,cAAM;gBAACS,SAAQ;0BAAU;;YACnCJ,OAAOH,cAAM,CAACC,SAAS,CAAC,WAAWI,WAAW,CAAC,UAAU;YAEzDC,uBAAS,qBAACR,cAAM;gBAACS,SAAQ;0BAAQ;;YACjCJ,OAAOH,cAAM,CAACC,SAAS,CAAC,WAAWI,WAAW,CAAC,iBAAiB;QAClE;QAEAT,KAAK,gCAAgC;YACnC,MAAM,EAAEU,QAAQ,EAAE,GAAGT,IAAAA,cAAM,gBAAC,qBAACC,cAAM;gBAACU,MAAK;0BAAK;;YAC9CL,OAAOH,cAAM,CAACC,SAAS,CAAC,WAAWI,WAAW,CAAC,QAAQ,UAAU;YAEjEC,uBAAS,qBAACR,cAAM;gBAACU,MAAK;0BAAK;;YAC3BL,OAAOH,cAAM,CAACC,SAAS,CAAC,WAAWI,WAAW,CAAC,QAAQ,QAAQ;QACjE;QAEAT,KAAK,4BAA4B;YAC/BC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;gBAACW,WAAU;0BAAe;;YACxCN,OAAOH,cAAM,CAACC,SAAS,CAAC,WAAWI,WAAW,CAAC;QACjD;IACF;IAEAb,SAAS,wBAAwB;QAC/BI,KAAK,wBAAwB;YAC3B,MAAMc,cAAchB,KAAKiB,EAAE;YAC3Bd,IAAAA,cAAM,gBAAC,qBAACC,cAAM;gBAACc,SAASF;0BAAa;;YAErCG,iBAAS,CAACC,KAAK,CAACd,cAAM,CAACC,SAAS,CAAC;YACjCE,OAAOO,aAAaK,qBAAqB,CAAC;QAC5C;QAEAnB,KAAK,yCAAyC;YAC5CC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;gBAACkB,QAAQ;gBAACC,MAAK;gBAASC,eAAY;0BAAa;;YAE/D,MAAMnB,SAASC,cAAM,CAACmB,WAAW,CAAC;YAClChB,OAAOJ,QAAQqB,YAAY;YAC3BjB,OAAOJ,QAAQsB,eAAe,CAAC,QAAQ;QACzC;QAEAzB,KAAK,yCAAyC;YAC5CC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;gBAACkB,QAAQ;0BAAC;;YAExB,MAAMjB,SAASC,cAAM,CAACC,SAAS,CAAC;YAChCE,OAAOJ,QAAQqB,YAAY;YAC3BjB,OAAOJ,QAAQM,WAAW,CAAC,uBAAuB;QACpD;IACF;IAEAb,SAAS,iBAAiB;QACxBI,KAAK,uCAAuC;YAC1CC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;0BAAC;;YAEf,MAAMC,SAASC,cAAM,CAACC,SAAS,CAAC;YAChCE,OAAOJ,QAAQM,WAAW,CAAC,sBAAsB,gBAAgB;QACnE;QAEAT,KAAK,+BAA+B;YAClCC,IAAAA,cAAM,gBACJ,qBAACC,cAAM;gBAACoB,eAAY;gBAAgBI,cAAW;0BAAgB;;YAKjE,MAAMvB,SAASC,cAAM,CAACmB,WAAW,CAAC;YAClChB,OAAOJ,QAAQsB,eAAe,CAAC,cAAc;QAC/C;IACF;IAEA7B,SAAS,sDAAsD;QAC7DI,KAAK,yCAAyC;YAC5C,MAAM2B,cAAc;gBAAC;gBAAU;gBAAQ;gBAAU;gBAAU;aAAO;YAElEA,YAAYC,OAAO,CAACC,CAAAA;gBAClBtB,OAAOsB,MAAMC,OAAO,CAACC,sBAAY,CAACC,EAAE,CAACC,UAAU;YACjD;QACF;QAEAjC,KAAK,gDAAgD;YACnD,MAAMkC,kBAAkB;gBAAC;gBAAU;gBAAQ;aAAS;YAEpDA,gBAAgBN,OAAO,CAACO,CAAAA;gBACtBlC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;8BAAEiC;;gBAChB5B,OAAOH,cAAM,CAACC,SAAS,CAAC,UAAU;oBAAEC,MAAM6B;gBAAO,IAAI3B,iBAAiB;YACxE;QACF;IACF;AACF"}