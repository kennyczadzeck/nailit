97f015bae142ba79f6a64d7afcd508a0
'use client';
"use strict";

/* istanbul ignore next */
function cov_zy6qjstdd() {
  var path = "/Users/kennyc/code/personal/nailit/app/components/ui/AddressAutocomplete.tsx";
  var hash = "abed705c5baa5523813a7209b7ca2f21c63cf79c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kennyc/code/personal/nailit/app/components/ui/AddressAutocomplete.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "6": {
        start: {
          line: 15,
          column: 39
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "8": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "18": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 88
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "22": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 95
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "25": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "29": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "30": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 215,
          column: 1
        }
      },
      "31": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 45
        }
      },
      "32": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "33": {
        start: {
          line: 58,
          column: 56
        },
        end: {
          line: 58,
          column: 83
        }
      },
      "34": {
        start: {
          line: 59,
          column: 58
        },
        end: {
          line: 59,
          column: 82
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "36": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "37": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 40
        }
      },
      "38": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "39": {
        start: {
          line: 68,
          column: 31
        },
        end: {
          line: 68,
          column: 103
        }
      },
      "40": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "41": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "42": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 48
        }
      },
      "43": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "44": {
        start: {
          line: 74,
          column: 48
        },
        end: {
          line: 74,
          column: 75
        }
      },
      "45": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "46": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "47": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "48": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 48
        }
      },
      "49": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 77
        }
      },
      "50": {
        start: {
          line: 82,
          column: 48
        },
        end: {
          line: 82,
          column: 75
        }
      },
      "51": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "52": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 40
        }
      },
      "53": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "54": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "55": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 55
        }
      },
      "56": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 94
        }
      },
      "57": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "58": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "59": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "60": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 45
        }
      },
      "61": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "62": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 75
        }
      },
      "63": {
        start: {
          line: 98,
          column: 63
        },
        end: {
          line: 98,
          column: 73
        }
      },
      "64": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "65": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 46
        }
      },
      "66": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "67": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "68": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "69": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 42
        }
      },
      "70": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "71": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "72": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 50
        }
      },
      "73": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "74": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "75": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 19
        }
      },
      "76": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "77": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 47
        }
      },
      "78": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "79": {
        start: {
          line: 139,
          column: 26
        },
        end: {
          line: 139,
          column: 49
        }
      },
      "80": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "81": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 54
        }
      },
      "82": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 23
        }
      },
      "83": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "84": {
        start: {
          line: 147,
          column: 36
        },
        end: {
          line: 147,
          column: 65
        }
      },
      "85": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 52
        }
      },
      "86": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 152,
          column: 18
        }
      },
      "87": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 55
        }
      },
      "88": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 159,
          column: 10
        }
      },
      "89": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "90": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 89
        }
      },
      "91": {
        start: {
          line: 165,
          column: 35
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "92": {
        start: {
          line: 166,
          column: 27
        },
        end: {
          line: 166,
          column: 57
        }
      },
      "93": {
        start: {
          line: 167,
          column: 29
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "94": {
        start: {
          line: 168,
          column: 30
        },
        end: {
          line: 168,
          column: 100
        }
      },
      "95": {
        start: {
          line: 168,
          column: 54
        },
        end: {
          line: 168,
          column: 99
        }
      },
      "96": {
        start: {
          line: 168,
          column: 78
        },
        end: {
          line: 168,
          column: 98
        }
      },
      "97": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "98": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "99": {
        start: {
          line: 198,
          column: 30
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "100": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 39
        }
      },
      "101": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 27
        }
      },
      "102": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "103": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 214,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 40
          }
        },
        loc: {
          start: {
            line: 18,
            column: 61
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 29
          }
        },
        loc: {
          start: {
            line: 55,
            column: 109
          },
          end: {
            line: 215,
            column: 1
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 74,
            column: 45
          }
        },
        loc: {
          start: {
            line: 74,
            column: 48
          },
          end: {
            line: 74,
            column: 75
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 82,
            column: 45
          }
        },
        loc: {
          start: {
            line: 82,
            column: 48
          },
          end: {
            line: 82,
            column: 75
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        loc: {
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 88,
            column: 43
          }
        },
        line: 88
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 94,
            column: 33
          }
        },
        loc: {
          start: {
            line: 94,
            column: 36
          },
          end: {
            line: 101,
            column: 9
          }
        },
        line: 94
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 98,
            column: 51
          },
          end: {
            line: 98,
            column: 52
          }
        },
        loc: {
          start: {
            line: 98,
            column: 63
          },
          end: {
            line: 98,
            column: 73
          }
        },
        line: 98
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 26
          }
        },
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 103
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 16
          }
        },
        loc: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 112,
            column: 9
          }
        },
        line: 108
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 117,
            column: 26
          },
          end: {
            line: 117,
            column: 27
          }
        },
        loc: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 117
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 138,
            column: 51
          }
        },
        loc: {
          start: {
            line: 138,
            column: 54
          },
          end: {
            line: 153,
            column: 9
          }
        },
        line: 138
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 24
          }
        },
        loc: {
          start: {
            line: 150,
            column: 27
          },
          end: {
            line: 152,
            column: 13
          }
        },
        line: 150
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 15
          },
          end: {
            line: 155,
            column: 16
          }
        },
        loc: {
          start: {
            line: 155,
            column: 19
          },
          end: {
            line: 159,
            column: 9
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 165,
            column: 35
          },
          end: {
            line: 165,
            column: 36
          }
        },
        loc: {
          start: {
            line: 165,
            column: 44
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 165
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 29
          },
          end: {
            line: 167,
            column: 30
          }
        },
        loc: {
          start: {
            line: 167,
            column: 38
          },
          end: {
            line: 170,
            column: 9
          }
        },
        line: 167
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 168,
            column: 46
          },
          end: {
            line: 168,
            column: 47
          }
        },
        loc: {
          start: {
            line: 168,
            column: 54
          },
          end: {
            line: 168,
            column: 99
          }
        },
        line: 168
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 168,
            column: 70
          },
          end: {
            line: 168,
            column: 71
          }
        },
        loc: {
          start: {
            line: 168,
            column: 78
          },
          end: {
            line: 168,
            column: 98
          }
        },
        line: 168
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 198,
            column: 30
          },
          end: {
            line: 198,
            column: 31
          }
        },
        loc: {
          start: {
            line: 198,
            column: 35
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 198
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 25
          }
        },
        loc: {
          start: {
            line: 203,
            column: 28
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 45
          }
        }, {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 65
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 20
          }
        }, {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 45
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 47
          }
        }, {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 76
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 31
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 53
          }
        }, {
          start: {
            line: 38,
            column: 57
          },
          end: {
            line: 38,
            column: 88
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "10": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 41,
            column: 88
          }
        }, {
          start: {
            line: 41,
            column: 91
          },
          end: {
            line: 41,
            column: 95
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 33
          }
        }, {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 45
          }
        }],
        line: 42
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 48
          },
          end: {
            line: 55,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 62
          },
          end: {
            line: 55,
            column: 80
          }
        }],
        line: 55
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 82
          },
          end: {
            line: 55,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 94
          },
          end: {
            line: 55,
            column: 96
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "18": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 25
          }
        }, {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 47
          }
        }, {
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 63,
            column: 76
          }
        }],
        line: 63
      },
      "19": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "20": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "21": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "22": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "23": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "24": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "25": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "26": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 31
          }
        }, {
          start: {
            line: 118,
            column: 35
          },
          end: {
            line: 118,
            column: 52
          }
        }, {
          start: {
            line: 118,
            column: 56
          },
          end: {
            line: 118,
            column: 79
          }
        }],
        line: 118
      },
      "27": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "28": {
        loc: {
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 59
          }
        }, {
          start: {
            line: 147,
            column: 63
          },
          end: {
            line: 147,
            column: 65
          }
        }],
        line: 147
      },
      "29": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "30": {
        loc: {
          start: {
            line: 166,
            column: 27
          },
          end: {
            line: 166,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 27
          },
          end: {
            line: 166,
            column: 51
          }
        }, {
          start: {
            line: 166,
            column: 55
          },
          end: {
            line: 166,
            column: 57
          }
        }],
        line: 166
      },
      "31": {
        loc: {
          start: {
            line: 169,
            column: 19
          },
          end: {
            line: 169,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 19
          },
          end: {
            line: 169,
            column: 39
          }
        }, {
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 169,
            column: 45
          }
        }],
        line: 169
      },
      "32": {
        loc: {
          start: {
            line: 172,
            column: 30
          },
          end: {
            line: 172,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 30
          },
          end: {
            line: 172,
            column: 53
          }
        }, {
          start: {
            line: 172,
            column: 57
          },
          end: {
            line: 172,
            column: 59
          }
        }],
        line: 172
      },
      "33": {
        loc: {
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 173,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 173,
            column: 35
          }
        }, {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 173,
            column: 41
          }
        }],
        line: 173
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/kennyc/code/personal/nailit/app/components/ui/AddressAutocomplete.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\n\ndeclare global {\n  interface Window {\n    google: any;\n    initGoogleMaps: () => void;\n    googleMapsLoading: boolean;\n    googleMapsCallbacks: (() => void)[];\n  }\n}\n\ninterface AddressData {\n  placeId: string;\n  lat?: number;\n  lng?: number;\n  formattedAddress?: string;\n  streetNumber?: string;\n  route?: string;\n  locality?: string;\n  administrativeAreaLevel1?: string;\n  country?: string;\n  postalCode?: string;\n}\n\ninterface AddressAutocompleteProps {\n  value: string;\n  onChange: (value: string, addressData?: AddressData) => void;\n  placeholder?: string;\n  className?: string;\n  apiKey: string;\n}\n\nexport const AddressAutocomplete: React.FC<AddressAutocompleteProps> = ({\n  value,\n  onChange,\n  placeholder = \"Enter address...\",\n  className = \"\",\n  apiKey\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const autocompleteRef = useRef<any>(null);\n  const [isGoogleMapsLoaded, setIsGoogleMapsLoaded] = useState(false);\n  const [lastSelectedAddress, setLastSelectedAddress] = useState('');\n\n  // Load Google Maps API with duplicate prevention\n  useEffect(() => {\n    // If already loaded, set state and return\n    if (window.google && window.google.maps && window.google.maps.places) {\n      setIsGoogleMapsLoaded(true);\n      return;\n    }\n\n    // Check if script already exists\n    const existingScript = document.querySelector('script[src*=\"maps.googleapis.com/maps/api/js\"]');\n    if (existingScript) {\n      // Script exists, wait for it to load\n      if (!window.googleMapsCallbacks) {\n        window.googleMapsCallbacks = [];\n      }\n      window.googleMapsCallbacks.push(() => setIsGoogleMapsLoaded(true));\n      return;\n    }\n\n    // Check if already loading\n    if (window.googleMapsLoading) {\n      if (!window.googleMapsCallbacks) {\n        window.googleMapsCallbacks = [];\n      }\n      window.googleMapsCallbacks.push(() => setIsGoogleMapsLoaded(true));\n      return;\n    }\n\n    // Mark as loading and create script\n    window.googleMapsLoading = true;\n    window.googleMapsCallbacks = [() => setIsGoogleMapsLoaded(true)];\n\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n    \n    window.initGoogleMaps = () => {\n      window.googleMapsLoading = false;\n      // Call all waiting callbacks\n      if (window.googleMapsCallbacks) {\n        window.googleMapsCallbacks.forEach(callback => callback());\n        window.googleMapsCallbacks = [];\n      }\n    };\n    \n    script.onload = window.initGoogleMaps;\n    script.onerror = () => {\n      console.error('Failed to load Google Maps API');\n      window.googleMapsLoading = false;\n    };\n    \n    document.head.appendChild(script);\n\n    return () => {\n      if (document.head.contains(script)) {\n        document.head.removeChild(script);\n      }\n    };\n  }, [apiKey]);\n\n  // Initialize autocomplete when Google Maps is loaded\n  useEffect(() => {\n    if (!isGoogleMapsLoaded || !inputRef.current || autocompleteRef.current) {\n      return;\n    }\n\n    // Initialize autocomplete with options\n    const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n      fields: ['address_components', 'formatted_address', 'geometry', 'place_id'],\n      types: ['address'],\n      componentRestrictions: { country: 'us' } // Restrict to US, modify as needed\n    });\n\n    autocompleteRef.current = autocomplete;\n\n    // Listen for place selection\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      \n      if (!place.geometry) {\n        console.warn('Place has no geometry');\n        return;\n      }\n\n      // Parse address components\n      const addressData = parseAddressComponents(place);\n      \n      // Mark as autocomplete selection and preserve the formatted address\n      const selectedAddress = place.formatted_address || '';\n      setLastSelectedAddress(selectedAddress);\n      \n      // Use setTimeout to ensure this happens after any pending state updates\n      setTimeout(() => {\n        onChange(selectedAddress, addressData);\n      }, 0);\n    });\n\n    // Cleanup function\n    return () => {\n      if (autocompleteRef.current) {\n        window.google.maps.event.clearInstanceListeners(autocompleteRef.current);\n      }\n    };\n  }, [isGoogleMapsLoaded, onChange]);\n\n  // Parse Google Places address components\n  const parseAddressComponents = (place: any): AddressData => {\n    const components = place.address_components || [];\n    \n    const getComponent = (types: string[]) => {\n      const component = components.find((comp: any) => \n        comp.types.some((type: string) => types.includes(type))\n      );\n      return component?.long_name || '';\n    };\n\n    return {\n      formattedAddress: place.formatted_address || '',\n      placeId: place.place_id || '',\n      lat: place.geometry?.location?.lat(),\n      lng: place.geometry?.location?.lng(),\n      streetNumber: getComponent(['street_number']),\n      route: getComponent(['route']),\n      locality: getComponent(['locality', 'administrative_area_level_2']),\n      administrativeAreaLevel1: getComponent(['administrative_area_level_1']),\n      country: getComponent(['country']),\n      postalCode: getComponent(['postal_code'])\n    };\n  };\n\n  // Handle manual input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n    onChange(newValue);\n  };\n\n  // Handle input focus - no special handling needed\n  const handleFocus = () => {\n    // No special handling needed - let user edit freely\n  };\n\n  return (\n    <input\n      ref={inputRef}\n      type=\"text\"\n      value={value}\n      onChange={handleInputChange}\n      onFocus={handleFocus}\n      placeholder={placeholder}\n      className={`w-full px-3 py-3 sm:py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-base sm:text-sm ${className}`}\n    />\n  );\n}; "],
      names: ["AddressAutocomplete", "value", "onChange", "placeholder", "className", "apiKey", "inputRef", "useRef", "autocompleteRef", "isGoogleMapsLoaded", "setIsGoogleMapsLoaded", "useState", "lastSelectedAddress", "setLastSelectedAddress", "useEffect", "window", "google", "maps", "places", "existingScript", "document", "querySelector", "googleMapsCallbacks", "push", "googleMapsLoading", "script", "createElement", "src", "async", "defer", "initGoogleMaps", "forEach", "callback", "onload", "onerror", "console", "error", "head", "appendChild", "contains", "removeChild", "current", "autocomplete", "Autocomplete", "fields", "types", "componentRestrictions", "country", "addListener", "place", "getPlace", "geometry", "warn", "addressData", "parseAddressComponents", "selectedAddress", "formatted_address", "setTimeout", "event", "clearInstanceListeners", "components", "address_components", "getComponent", "component", "find", "comp", "some", "type", "includes", "long_name", "formattedAddress", "placeId", "place_id", "lat", "location", "lng", "streetNumber", "route", "locality", "administrativeAreaLevel1", "postalCode", "handleInputChange", "e", "newValue", "target", "handleFocus", "input", "ref", "onFocus"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "abed705c5baa5523813a7209b7ca2f21c63cf79c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zy6qjstdd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zy6qjstdd();
cov_zy6qjstdd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zy6qjstdd().s[1]++;
Object.defineProperty(exports, "AddressAutocomplete", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[0]++;
    cov_zy6qjstdd().s[2]++;
    return AddressAutocomplete;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_zy6qjstdd().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_zy6qjstdd().s[4]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_zy6qjstdd().f[1]++;
  cov_zy6qjstdd().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_zy6qjstdd().b[0][0]++;
    cov_zy6qjstdd().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_zy6qjstdd().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_zy6qjstdd().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[2]++;
    cov_zy6qjstdd().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_zy6qjstdd().f[3]++;
  cov_zy6qjstdd().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_zy6qjstdd().b[2][0]++;
    cov_zy6qjstdd().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_zy6qjstdd().b[2][1]++;
  }
  cov_zy6qjstdd().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_zy6qjstdd().b[4][0]++;
    cov_zy6qjstdd().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_zy6qjstdd().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_zy6qjstdd().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_zy6qjstdd().b[6][0]++;
    cov_zy6qjstdd().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_zy6qjstdd().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[19]++,
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_zy6qjstdd().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_zy6qjstdd().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_zy6qjstdd().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_zy6qjstdd().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[11][1]++, null));
      /* istanbul ignore next */
      cov_zy6qjstdd().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[12][0]++;
        cov_zy6qjstdd().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[12][1]++;
        cov_zy6qjstdd().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_zy6qjstdd().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_zy6qjstdd().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_zy6qjstdd().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_zy6qjstdd().b[14][0]++;
    cov_zy6qjstdd().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_zy6qjstdd().b[14][1]++;
  }
  cov_zy6qjstdd().s[29]++;
  return newObj;
}
/* istanbul ignore next */
cov_zy6qjstdd().s[30]++;
const AddressAutocomplete = ({
  value,
  onChange,
  placeholder =
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[15][0]++, "Enter address..."),
  className =
  /* istanbul ignore next */
  (cov_zy6qjstdd().b[16][0]++, ""),
  apiKey
}) => {
  /* istanbul ignore next */
  cov_zy6qjstdd().f[4]++;
  const inputRef =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[31]++, (0, _react.useRef)(null));
  const autocompleteRef =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[32]++, (0, _react.useRef)(null));
  const [isGoogleMapsLoaded, setIsGoogleMapsLoaded] =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[33]++, (0, _react.useState)(false));
  const [lastSelectedAddress, setLastSelectedAddress] =
  /* istanbul ignore next */
  (cov_zy6qjstdd().s[34]++, (0, _react.useState)(''));
  // Load Google Maps API with duplicate prevention
  /* istanbul ignore next */
  cov_zy6qjstdd().s[35]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[5]++;
    cov_zy6qjstdd().s[36]++;
    // If already loaded, set state and return
    if (
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[18][0]++, window.google) &&
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[18][1]++, window.google.maps) &&
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[18][2]++, window.google.maps.places)) {
      /* istanbul ignore next */
      cov_zy6qjstdd().b[17][0]++;
      cov_zy6qjstdd().s[37]++;
      setIsGoogleMapsLoaded(true);
      /* istanbul ignore next */
      cov_zy6qjstdd().s[38]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_zy6qjstdd().b[17][1]++;
    }
    // Check if script already exists
    const existingScript =
    /* istanbul ignore next */
    (cov_zy6qjstdd().s[39]++, document.querySelector('script[src*="maps.googleapis.com/maps/api/js"]'));
    /* istanbul ignore next */
    cov_zy6qjstdd().s[40]++;
    if (existingScript) {
      /* istanbul ignore next */
      cov_zy6qjstdd().b[19][0]++;
      cov_zy6qjstdd().s[41]++;
      // Script exists, wait for it to load
      if (!window.googleMapsCallbacks) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[20][0]++;
        cov_zy6qjstdd().s[42]++;
        window.googleMapsCallbacks = [];
      } else
      /* istanbul ignore next */
      {
        cov_zy6qjstdd().b[20][1]++;
      }
      cov_zy6qjstdd().s[43]++;
      window.googleMapsCallbacks.push(() => {
        /* istanbul ignore next */
        cov_zy6qjstdd().f[6]++;
        cov_zy6qjstdd().s[44]++;
        return setIsGoogleMapsLoaded(true);
      });
      /* istanbul ignore next */
      cov_zy6qjstdd().s[45]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_zy6qjstdd().b[19][1]++;
    }
    // Check if already loading
    cov_zy6qjstdd().s[46]++;
    if (window.googleMapsLoading) {
      /* istanbul ignore next */
      cov_zy6qjstdd().b[21][0]++;
      cov_zy6qjstdd().s[47]++;
      if (!window.googleMapsCallbacks) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[22][0]++;
        cov_zy6qjstdd().s[48]++;
        window.googleMapsCallbacks = [];
      } else
      /* istanbul ignore next */
      {
        cov_zy6qjstdd().b[22][1]++;
      }
      cov_zy6qjstdd().s[49]++;
      window.googleMapsCallbacks.push(() => {
        /* istanbul ignore next */
        cov_zy6qjstdd().f[7]++;
        cov_zy6qjstdd().s[50]++;
        return setIsGoogleMapsLoaded(true);
      });
      /* istanbul ignore next */
      cov_zy6qjstdd().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_zy6qjstdd().b[21][1]++;
    }
    // Mark as loading and create script
    cov_zy6qjstdd().s[52]++;
    window.googleMapsLoading = true;
    /* istanbul ignore next */
    cov_zy6qjstdd().s[53]++;
    window.googleMapsCallbacks = [() => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[8]++;
      cov_zy6qjstdd().s[54]++;
      return setIsGoogleMapsLoaded(true);
    }];
    const script =
    /* istanbul ignore next */
    (cov_zy6qjstdd().s[55]++, document.createElement('script'));
    /* istanbul ignore next */
    cov_zy6qjstdd().s[56]++;
    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;
    /* istanbul ignore next */
    cov_zy6qjstdd().s[57]++;
    script.async = true;
    /* istanbul ignore next */
    cov_zy6qjstdd().s[58]++;
    script.defer = true;
    /* istanbul ignore next */
    cov_zy6qjstdd().s[59]++;
    window.initGoogleMaps = () => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[9]++;
      cov_zy6qjstdd().s[60]++;
      window.googleMapsLoading = false;
      // Call all waiting callbacks
      /* istanbul ignore next */
      cov_zy6qjstdd().s[61]++;
      if (window.googleMapsCallbacks) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[23][0]++;
        cov_zy6qjstdd().s[62]++;
        window.googleMapsCallbacks.forEach(callback => {
          /* istanbul ignore next */
          cov_zy6qjstdd().f[10]++;
          cov_zy6qjstdd().s[63]++;
          return callback();
        });
        /* istanbul ignore next */
        cov_zy6qjstdd().s[64]++;
        window.googleMapsCallbacks = [];
      } else
      /* istanbul ignore next */
      {
        cov_zy6qjstdd().b[23][1]++;
      }
    };
    /* istanbul ignore next */
    cov_zy6qjstdd().s[65]++;
    script.onload = window.initGoogleMaps;
    /* istanbul ignore next */
    cov_zy6qjstdd().s[66]++;
    script.onerror = () => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[11]++;
      cov_zy6qjstdd().s[67]++;
      console.error('Failed to load Google Maps API');
      /* istanbul ignore next */
      cov_zy6qjstdd().s[68]++;
      window.googleMapsLoading = false;
    };
    /* istanbul ignore next */
    cov_zy6qjstdd().s[69]++;
    document.head.appendChild(script);
    /* istanbul ignore next */
    cov_zy6qjstdd().s[70]++;
    return () => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[12]++;
      cov_zy6qjstdd().s[71]++;
      if (document.head.contains(script)) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[24][0]++;
        cov_zy6qjstdd().s[72]++;
        document.head.removeChild(script);
      } else
      /* istanbul ignore next */
      {
        cov_zy6qjstdd().b[24][1]++;
      }
    };
  }, [apiKey]);
  // Initialize autocomplete when Google Maps is loaded
  /* istanbul ignore next */
  cov_zy6qjstdd().s[73]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[13]++;
    cov_zy6qjstdd().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[26][0]++, !isGoogleMapsLoaded) ||
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[26][1]++, !inputRef.current) ||
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[26][2]++, autocompleteRef.current)) {
      /* istanbul ignore next */
      cov_zy6qjstdd().b[25][0]++;
      cov_zy6qjstdd().s[75]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_zy6qjstdd().b[25][1]++;
    }
    // Initialize autocomplete with options
    const autocomplete =
    /* istanbul ignore next */
    (cov_zy6qjstdd().s[76]++, new window.google.maps.places.Autocomplete(inputRef.current, {
      fields: ['address_components', 'formatted_address', 'geometry', 'place_id'],
      types: ['address'],
      componentRestrictions: {
        country: 'us'
      } // Restrict to US, modify as needed
    }));
    /* istanbul ignore next */
    cov_zy6qjstdd().s[77]++;
    autocompleteRef.current = autocomplete;
    // Listen for place selection
    /* istanbul ignore next */
    cov_zy6qjstdd().s[78]++;
    autocomplete.addListener('place_changed', () => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[14]++;
      const place =
      /* istanbul ignore next */
      (cov_zy6qjstdd().s[79]++, autocomplete.getPlace());
      /* istanbul ignore next */
      cov_zy6qjstdd().s[80]++;
      if (!place.geometry) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[27][0]++;
        cov_zy6qjstdd().s[81]++;
        console.warn('Place has no geometry');
        /* istanbul ignore next */
        cov_zy6qjstdd().s[82]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_zy6qjstdd().b[27][1]++;
      }
      // Parse address components
      const addressData =
      /* istanbul ignore next */
      (cov_zy6qjstdd().s[83]++, parseAddressComponents(place));
      // Mark as autocomplete selection and preserve the formatted address
      const selectedAddress =
      /* istanbul ignore next */
      (cov_zy6qjstdd().s[84]++,
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[28][0]++, place.formatted_address) ||
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[28][1]++, ''));
      /* istanbul ignore next */
      cov_zy6qjstdd().s[85]++;
      setLastSelectedAddress(selectedAddress);
      // Use setTimeout to ensure this happens after any pending state updates
      /* istanbul ignore next */
      cov_zy6qjstdd().s[86]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_zy6qjstdd().f[15]++;
        cov_zy6qjstdd().s[87]++;
        onChange(selectedAddress, addressData);
      }, 0);
    });
    // Cleanup function
    /* istanbul ignore next */
    cov_zy6qjstdd().s[88]++;
    return () => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[16]++;
      cov_zy6qjstdd().s[89]++;
      if (autocompleteRef.current) {
        /* istanbul ignore next */
        cov_zy6qjstdd().b[29][0]++;
        cov_zy6qjstdd().s[90]++;
        window.google.maps.event.clearInstanceListeners(autocompleteRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_zy6qjstdd().b[29][1]++;
      }
    };
  }, [isGoogleMapsLoaded, onChange]);
  // Parse Google Places address components
  /* istanbul ignore next */
  cov_zy6qjstdd().s[91]++;
  const parseAddressComponents = place => {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[17]++;
    const components =
    /* istanbul ignore next */
    (cov_zy6qjstdd().s[92]++,
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[30][0]++, place.address_components) ||
    /* istanbul ignore next */
    (cov_zy6qjstdd().b[30][1]++, []));
    /* istanbul ignore next */
    cov_zy6qjstdd().s[93]++;
    const getComponent = types => {
      /* istanbul ignore next */
      cov_zy6qjstdd().f[18]++;
      const component =
      /* istanbul ignore next */
      (cov_zy6qjstdd().s[94]++, components.find(comp => {
        /* istanbul ignore next */
        cov_zy6qjstdd().f[19]++;
        cov_zy6qjstdd().s[95]++;
        return comp.types.some(type => {
          /* istanbul ignore next */
          cov_zy6qjstdd().f[20]++;
          cov_zy6qjstdd().s[96]++;
          return types.includes(type);
        });
      }));
      /* istanbul ignore next */
      cov_zy6qjstdd().s[97]++;
      return /* istanbul ignore next */(cov_zy6qjstdd().b[31][0]++, component?.long_name) ||
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[31][1]++, '');
    };
    /* istanbul ignore next */
    cov_zy6qjstdd().s[98]++;
    return {
      formattedAddress:
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[32][0]++, place.formatted_address) ||
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[32][1]++, ''),
      placeId:
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[33][0]++, place.place_id) ||
      /* istanbul ignore next */
      (cov_zy6qjstdd().b[33][1]++, ''),
      lat: place.geometry?.location?.lat(),
      lng: place.geometry?.location?.lng(),
      streetNumber: getComponent(['street_number']),
      route: getComponent(['route']),
      locality: getComponent(['locality', 'administrative_area_level_2']),
      administrativeAreaLevel1: getComponent(['administrative_area_level_1']),
      country: getComponent(['country']),
      postalCode: getComponent(['postal_code'])
    };
  };
  // Handle manual input changes
  /* istanbul ignore next */
  cov_zy6qjstdd().s[99]++;
  const handleInputChange = e => {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[21]++;
    const newValue =
    /* istanbul ignore next */
    (cov_zy6qjstdd().s[100]++, e.target.value);
    /* istanbul ignore next */
    cov_zy6qjstdd().s[101]++;
    onChange(newValue);
  };
  // Handle input focus - no special handling needed
  /* istanbul ignore next */
  cov_zy6qjstdd().s[102]++;
  const handleFocus = () => {
    /* istanbul ignore next */
    cov_zy6qjstdd().f[22]++;
  } // No special handling needed - let user edit freely
  ;
  /* istanbul ignore next */
  cov_zy6qjstdd().s[103]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
    ref: inputRef,
    type: "text",
    value: value,
    onChange: handleInputChange,
    onFocus: handleFocus,
    placeholder: placeholder,
    className: `w-full px-3 py-3 sm:py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-base sm:text-sm ${className}`
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,