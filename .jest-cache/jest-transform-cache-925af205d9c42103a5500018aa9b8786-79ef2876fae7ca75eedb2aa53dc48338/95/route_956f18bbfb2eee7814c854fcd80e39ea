c596491391f24a9bde4c3c66c0c463c0
"use strict";

/* istanbul ignore next */
function cov_2j63vubub1() {
  var path = "/Users/kennyc/code/personal/nailit/app/api/auth/[...nextauth]/route.ts";
  var hash = "c28bcf6354ff528fa23a45857b84d8431a3c3f33";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kennyc/code/personal/nailit/app/api/auth/[...nextauth]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "7": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 79
        }
      },
      "8": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 93
        }
      },
      "9": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "12": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "13": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "14": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 44
        }
      },
      "15": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 27
        }
      },
      "16": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "17": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 36
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "19": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        loc: {
          start: {
            line: 40,
            column: 43
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        loc: {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 53,
            column: 9
          }
        },
        line: 47
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 21
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 38
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/kennyc/code/personal/nailit/app/api/auth/[...nextauth]/route.ts"],
      sourcesContent: ["import { NextAuthOptions } from \"next-auth\"\nimport NextAuth from \"next-auth/next\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\"\nimport { prisma } from \"../../../lib/prisma\"\n\ndeclare module \"next-auth\" {\n  interface Session {\n    user: {\n      id: string;\n      name?: string | null;\n      email?: string | null;\n      image?: string | null;\n    }\n  }\n}\n\nexport const authOptions: NextAuthOptions = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n  ],\n  callbacks: {\n    async session({ session, token }) {\n      // For JWT sessions, get user ID from token\n      if (token && session?.user) {\n        session.user.id = token.sub!;\n      }\n      return session;\n    },\n    async jwt({ token, user, account }) {\n      // On first sign in, get user ID from database\n      if (user) {\n        token.sub = user.id;\n      }\n      return token;\n    },\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n    error: \"/auth/error\",\n  },\n  session: {\n    strategy: \"jwt\", // Use JWT for better serverless compatibility\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  cookies: {\n    sessionToken: {\n      name: `next-auth.session-token`,\n      options: {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        secure: process.env.NODE_ENV === 'production'\n      }\n    },\n  },\n  debug: process.env.NODE_ENV === \"development\",\n}\n\nconst handler = NextAuth(authOptions)\n\nexport { handler as GET, handler as POST } "],
      names: ["GET", "handler", "POST", "authOptions", "adapter", "PrismaAdapter", "prisma", "providers", "GoogleProvider", "clientId", "process", "env", "GOOGLE_CLIENT_ID", "clientSecret", "GOOGLE_CLIENT_SECRET", "callbacks", "session", "token", "user", "id", "sub", "jwt", "account", "pages", "signIn", "error", "strategy", "maxAge", "cookies", "sessionToken", "name", "options", "httpOnly", "sameSite", "path", "secure", "NODE_ENV", "debug", "NextAuth"],
      mappings: ";;;;;;;;;;;QAiEoBA;eAAXC;;QAA2BC;eAAXD;;QAhDZE;eAAAA;;;6DAhBQ;+DACM;+BACG;wBACP;;;;;;AAahB,MAAMA,cAA+B;IAC1CC,SAASC,IAAAA,4BAAa,EAACC,cAAM;IAC7BC,WAAW;QACTC,IAAAA,eAAc,EAAC;YACbC,UAAUC,QAAQC,GAAG,CAACC,gBAAgB;YACtCC,cAAcH,QAAQC,GAAG,CAACG,oBAAoB;QAChD;KACD;IACDC,WAAW;QACT,MAAMC,SAAQ,EAAEA,OAAO,EAAEC,KAAK,EAAE;YAC9B,2CAA2C;YAC3C,IAAIA,SAASD,SAASE,MAAM;gBAC1BF,QAAQE,IAAI,CAACC,EAAE,GAAGF,MAAMG,GAAG;YAC7B;YACA,OAAOJ;QACT;QACA,MAAMK,KAAI,EAAEJ,KAAK,EAAEC,IAAI,EAAEI,OAAO,EAAE;YAChC,8CAA8C;YAC9C,IAAIJ,MAAM;gBACRD,MAAMG,GAAG,GAAGF,KAAKC,EAAE;YACrB;YACA,OAAOF;QACT;IACF;IACAM,OAAO;QACLC,QAAQ;QACRC,OAAO;IACT;IACAT,SAAS;QACPU,UAAU;QACVC,QAAQ,KAAK,KAAK,KAAK;IACzB;IACAC,SAAS;QACPC,cAAc;YACZC,MAAM,CAAC,uBAAuB,CAAC;YAC/BC,SAAS;gBACPC,UAAU;gBACVC,UAAU;gBACVC,MAAM;gBACNC,QAAQzB,QAAQC,GAAG,CAACyB,QAAQ,KAAK;YACnC;QACF;IACF;IACAC,OAAO3B,QAAQC,GAAG,CAACyB,QAAQ,KAAK;AAClC;AAEA,MAAMnC,UAAUqC,IAAAA,aAAQ,EAACnC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c28bcf6354ff528fa23a45857b84d8431a3c3f33"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2j63vubub1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2j63vubub1();
cov_2j63vubub1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2j63vubub1().f[0]++;
  cov_2j63vubub1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2j63vubub1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2j63vubub1().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2j63vubub1().f[1]++;
    cov_2j63vubub1().s[4]++;
    return handler;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2j63vubub1().f[2]++;
    cov_2j63vubub1().s[5]++;
    return handler;
  },
  get authOptions() {
    /* istanbul ignore next */
    cov_2j63vubub1().f[3]++;
    cov_2j63vubub1().s[6]++;
    return authOptions;
  }
});
const _next =
/* istanbul ignore next */
(/*#__PURE__*/cov_2j63vubub1().s[7]++, _interop_require_default(require("next-auth/next")));
const _google =
/* istanbul ignore next */
(/*#__PURE__*/cov_2j63vubub1().s[8]++, _interop_require_default(require("next-auth/providers/google")));
const _prismaadapter =
/* istanbul ignore next */
(cov_2j63vubub1().s[9]++, require("@auth/prisma-adapter"));
const _prisma =
/* istanbul ignore next */
(cov_2j63vubub1().s[10]++, require("../../../lib/prisma"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2j63vubub1().f[4]++;
  cov_2j63vubub1().s[11]++;
  return /* istanbul ignore next */(cov_2j63vubub1().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2j63vubub1().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2j63vubub1().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2j63vubub1().b[0][1]++, {
    default: obj
  });
}
const authOptions =
/* istanbul ignore next */
(cov_2j63vubub1().s[12]++, {
  adapter: (0, _prismaadapter.PrismaAdapter)(_prisma.prisma),
  providers: [(0, _google.default)({
    clientId: process.env.GOOGLE_CLIENT_ID,
    clientSecret: process.env.GOOGLE_CLIENT_SECRET
  })],
  callbacks: {
    async session({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_2j63vubub1().f[5]++;
      cov_2j63vubub1().s[13]++;
      // For JWT sessions, get user ID from token
      if (
      /* istanbul ignore next */
      (cov_2j63vubub1().b[3][0]++, token) &&
      /* istanbul ignore next */
      (cov_2j63vubub1().b[3][1]++, session?.user)) {
        /* istanbul ignore next */
        cov_2j63vubub1().b[2][0]++;
        cov_2j63vubub1().s[14]++;
        session.user.id = token.sub;
      } else
      /* istanbul ignore next */
      {
        cov_2j63vubub1().b[2][1]++;
      }
      cov_2j63vubub1().s[15]++;
      return session;
    },
    async jwt({
      token,
      user,
      account
    }) {
      /* istanbul ignore next */
      cov_2j63vubub1().f[6]++;
      cov_2j63vubub1().s[16]++;
      // On first sign in, get user ID from database
      if (user) {
        /* istanbul ignore next */
        cov_2j63vubub1().b[4][0]++;
        cov_2j63vubub1().s[17]++;
        token.sub = user.id;
      } else
      /* istanbul ignore next */
      {
        cov_2j63vubub1().b[4][1]++;
      }
      cov_2j63vubub1().s[18]++;
      return token;
    }
  },
  pages: {
    signIn: "/auth/signin",
    error: "/auth/error"
  },
  session: {
    strategy: "jwt",
    maxAge: 30 * 24 * 60 * 60
  },
  cookies: {
    sessionToken: {
      name: `next-auth.session-token`,
      options: {
        httpOnly: true,
        sameSite: 'lax',
        path: '/',
        secure: process.env.NODE_ENV === 'production'
      }
    }
  },
  debug: process.env.NODE_ENV === "development"
});
const handler =
/* istanbul ignore next */
(cov_2j63vubub1().s[19]++, (0, _next.default)(authOptions));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJjb3ZfMmo2M3Z1YnViMSIsImYiLCJzIiwiaGFuZGxlciIsIlBPU1QiLCJhdXRoT3B0aW9ucyIsImFkYXB0ZXIiLCJfcHJpc21hYWRhcHRlciIsIlByaXNtYUFkYXB0ZXIiLCJfcHJpc21hIiwicHJpc21hIiwicHJvdmlkZXJzIiwiX2dvb2dsZSIsImRlZmF1bHQiLCJjbGllbnRJZCIsInByb2Nlc3MiLCJlbnYiLCJHT09HTEVfQ0xJRU5UX0lEIiwiY2xpZW50U2VjcmV0IiwiR09PR0xFX0NMSUVOVF9TRUNSRVQiLCJjYWxsYmFja3MiLCJzZXNzaW9uIiwidG9rZW4iLCJiIiwidXNlciIsImlkIiwic3ViIiwiand0IiwiYWNjb3VudCIsInBhZ2VzIiwic2lnbkluIiwiZXJyb3IiLCJzdHJhdGVneSIsIm1heEFnZSIsImNvb2tpZXMiLCJzZXNzaW9uVG9rZW4iLCJuYW1lIiwib3B0aW9ucyIsImh0dHBPbmx5Iiwic2FtZVNpdGUiLCJwYXRoIiwic2VjdXJlIiwiTk9ERV9FTlYiLCJkZWJ1ZyIsIl9uZXh0Il0sInNvdXJjZXMiOlsiL1VzZXJzL2tlbm55Yy9jb2RlL3BlcnNvbmFsL25haWxpdC9hcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXV0aE9wdGlvbnMgfSBmcm9tIFwibmV4dC1hdXRoXCJcbmltcG9ydCBOZXh0QXV0aCBmcm9tIFwibmV4dC1hdXRoL25leHRcIlxuaW1wb3J0IEdvb2dsZVByb3ZpZGVyIGZyb20gXCJuZXh0LWF1dGgvcHJvdmlkZXJzL2dvb2dsZVwiXG5pbXBvcnQgeyBQcmlzbWFBZGFwdGVyIH0gZnJvbSBcIkBhdXRoL3ByaXNtYS1hZGFwdGVyXCJcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCIuLi8uLi8uLi9saWIvcHJpc21hXCJcblxuZGVjbGFyZSBtb2R1bGUgXCJuZXh0LWF1dGhcIiB7XG4gIGludGVyZmFjZSBTZXNzaW9uIHtcbiAgICB1c2VyOiB7XG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgbmFtZT86IHN0cmluZyB8IG51bGw7XG4gICAgICBlbWFpbD86IHN0cmluZyB8IG51bGw7XG4gICAgICBpbWFnZT86IHN0cmluZyB8IG51bGw7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBhdXRoT3B0aW9uczogTmV4dEF1dGhPcHRpb25zID0ge1xuICBhZGFwdGVyOiBQcmlzbWFBZGFwdGVyKHByaXNtYSksXG4gIHByb3ZpZGVyczogW1xuICAgIEdvb2dsZVByb3ZpZGVyKHtcbiAgICAgIGNsaWVudElkOiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEISxcbiAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9TRUNSRVQhLFxuICAgIH0pLFxuICBdLFxuICBjYWxsYmFja3M6IHtcbiAgICBhc3luYyBzZXNzaW9uKHsgc2Vzc2lvbiwgdG9rZW4gfSkge1xuICAgICAgLy8gRm9yIEpXVCBzZXNzaW9ucywgZ2V0IHVzZXIgSUQgZnJvbSB0b2tlblxuICAgICAgaWYgKHRva2VuICYmIHNlc3Npb24/LnVzZXIpIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uc3ViITtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH0sXG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIsIGFjY291bnQgfSkge1xuICAgICAgLy8gT24gZmlyc3Qgc2lnbiBpbiwgZ2V0IHVzZXIgSUQgZnJvbSBkYXRhYmFzZVxuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgdG9rZW4uc3ViID0gdXNlci5pZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlbjtcbiAgICB9LFxuICB9LFxuICBwYWdlczoge1xuICAgIHNpZ25JbjogXCIvYXV0aC9zaWduaW5cIixcbiAgICBlcnJvcjogXCIvYXV0aC9lcnJvclwiLFxuICB9LFxuICBzZXNzaW9uOiB7XG4gICAgc3RyYXRlZ3k6IFwiand0XCIsIC8vIFVzZSBKV1QgZm9yIGJldHRlciBzZXJ2ZXJsZXNzIGNvbXBhdGliaWxpdHlcbiAgICBtYXhBZ2U6IDMwICogMjQgKiA2MCAqIDYwLCAvLyAzMCBkYXlzXG4gIH0sXG4gIGNvb2tpZXM6IHtcbiAgICBzZXNzaW9uVG9rZW46IHtcbiAgICAgIG5hbWU6IGBuZXh0LWF1dGguc2Vzc2lvbi10b2tlbmAsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nXG4gICAgICB9XG4gICAgfSxcbiAgfSxcbiAgZGVidWc6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIsXG59XG5cbmNvbnN0IGhhbmRsZXIgPSBOZXh0QXV0aChhdXRoT3B0aW9ucylcblxuZXhwb3J0IHsgaGFuZGxlciBhcyBHRVQsIGhhbmRsZXIgYXMgUE9TVCB9ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQWlFb0JBLElBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQVhDLE9BQUE7O01BQTJCQyxLQUFBO0lBQUE7SUFBQUosY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFYQyxPQUFBOztNQWhEWkUsWUFBQTtJQUFBO0lBQUFMLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUcsV0FBQTs7Ozs7d0VBaEJROzs7d0VBQ007OztrQ0FDRzs7O21DQUNQOzs7Ozs7Ozs7Ozs7Ozs7QUFhaEIsTUFBTUEsV0FBQTtBQUFBO0FBQUEsQ0FBQUwsY0FBQSxHQUFBRSxDQUFBLFFBQStCO0VBQzFDSSxPQUFBLEVBQVMsSUFBQUMsY0FBQSxDQUFBQyxhQUFhLEVBQUNDLE9BQUEsQ0FBQUMsTUFBTTtFQUM3QkMsU0FBQSxFQUFXLENBQ1QsSUFBQUMsT0FBQSxDQUFBQyxPQUFjLEVBQUM7SUFDYkMsUUFBQSxFQUFVQyxPQUFBLENBQVFDLEdBQUcsQ0FBQ0MsZ0JBQWdCO0lBQ3RDQyxZQUFBLEVBQWNILE9BQUEsQ0FBUUMsR0FBRyxDQUFDRztFQUM1QixHQUNEO0VBQ0RDLFNBQUEsRUFBVztJQUNULE1BQU1DLFFBQVE7TUFBRUEsT0FBTztNQUFFQztJQUFLLENBQUU7TUFBQTtNQUFBdEIsY0FBQSxHQUFBQyxDQUFBO01BQUFELGNBQUEsR0FBQUUsQ0FBQTtNQUM5QjtNQUNBO01BQUk7TUFBQSxDQUFBRixjQUFBLEdBQUF1QixDQUFBLFVBQUFELEtBQUE7TUFBQTtNQUFBLENBQUF0QixjQUFBLEdBQUF1QixDQUFBLFVBQVNGLE9BQUEsRUFBU0csSUFBQSxHQUFNO1FBQUE7UUFBQXhCLGNBQUEsR0FBQXVCLENBQUE7UUFBQXZCLGNBQUEsR0FBQUUsQ0FBQTtRQUMxQm1CLE9BQUEsQ0FBUUcsSUFBSSxDQUFDQyxFQUFFLEdBQUdILEtBQUEsQ0FBTUksR0FBRztNQUM3QjtNQUFBO01BQUE7UUFBQTFCLGNBQUEsR0FBQXVCLENBQUE7TUFBQTtNQUFBdkIsY0FBQSxHQUFBRSxDQUFBO01BQ0EsT0FBT21CLE9BQUE7SUFDVDtJQUNBLE1BQU1NLElBQUk7TUFBRUwsS0FBSztNQUFFRSxJQUFJO01BQUVJO0lBQU8sQ0FBRTtNQUFBO01BQUE1QixjQUFBLEdBQUFDLENBQUE7TUFBQUQsY0FBQSxHQUFBRSxDQUFBO01BQ2hDO01BQ0EsSUFBSXNCLElBQUEsRUFBTTtRQUFBO1FBQUF4QixjQUFBLEdBQUF1QixDQUFBO1FBQUF2QixjQUFBLEdBQUFFLENBQUE7UUFDUm9CLEtBQUEsQ0FBTUksR0FBRyxHQUFHRixJQUFBLENBQUtDLEVBQUU7TUFDckI7TUFBQTtNQUFBO1FBQUF6QixjQUFBLEdBQUF1QixDQUFBO01BQUE7TUFBQXZCLGNBQUEsR0FBQUUsQ0FBQTtNQUNBLE9BQU9vQixLQUFBO0lBQ1Q7RUFDRjtFQUNBTyxLQUFBLEVBQU87SUFDTEMsTUFBQSxFQUFRO0lBQ1JDLEtBQUEsRUFBTztFQUNUO0VBQ0FWLE9BQUEsRUFBUztJQUNQVyxRQUFBLEVBQVU7SUFDVkMsTUFBQSxFQUFRLEtBQUssS0FBSyxLQUFLO0VBQ3pCO0VBQ0FDLE9BQUEsRUFBUztJQUNQQyxZQUFBLEVBQWM7TUFDWkMsSUFBQSxFQUFNLHlCQUF5QjtNQUMvQkMsT0FBQSxFQUFTO1FBQ1BDLFFBQUEsRUFBVTtRQUNWQyxRQUFBLEVBQVU7UUFDVkMsSUFBQSxFQUFNO1FBQ05DLE1BQUEsRUFBUTFCLE9BQUEsQ0FBUUMsR0FBRyxDQUFDMEIsUUFBUSxLQUFLO01BQ25DO0lBQ0Y7RUFDRjtFQUNBQyxLQUFBLEVBQU81QixPQUFBLENBQVFDLEdBQUcsQ0FBQzBCLFFBQVEsS0FBSztBQUNsQztBQUVBLE1BQU12QyxPQUFBO0FBQUE7QUFBQSxDQUFBSCxjQUFBLEdBQUFFLENBQUEsUUFBVSxJQUFBMEMsS0FBQSxDQUFBL0IsT0FBUSxFQUFDUixXQUFBIiwiaWdub3JlTGlzdCI6W119