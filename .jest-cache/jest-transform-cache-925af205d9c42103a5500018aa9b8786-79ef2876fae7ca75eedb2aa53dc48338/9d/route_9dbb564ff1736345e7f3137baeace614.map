{"version":3,"names":["cov_2m399r5j6y","actualCoverage","s","GET","request","f","searchParams","URL","url","projectId","get","b","_server","NextResponse","json","error","status","flaggedItems","_prisma","prisma","flaggedItem","findMany","where","orderBy","emailDate","transformedItems","map","item","id","category","toLowerCase","title","description","impact","date","toISOString","split","time","getRelativeTime","emailFrom","project","needsEmailResponse","aiConfidence","originalEmail","detectedChanges","console","now","Date","diffMs","getTime","diffHours","Math","floor","diffDays"],"sources":["/Users/kennyc/code/personal/nailit/app/api/flagged-items/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '../../lib/prisma'\n\n// GET /api/flagged-items - Get all flagged items for a project\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const projectId = searchParams.get('projectId')\n\n    if (!projectId) {\n      return NextResponse.json(\n        { error: 'Project ID is required' },\n        { status: 400 }\n      )\n    }\n\n    const flaggedItems = await prisma.flaggedItem.findMany({\n      where: {\n        projectId,\n        status: 'PENDING' // Only show pending items\n      },\n      orderBy: {\n        emailDate: 'desc'\n      }\n    })\n\n    // Transform the data to match frontend expectations\n    const transformedItems = flaggedItems.map(item => ({\n      id: item.id,\n      category: item.category.toLowerCase(),\n      title: item.title,\n      description: item.description,\n      impact: item.impact,\n      date: item.emailDate.toISOString().split('T')[0],\n      time: getRelativeTime(item.emailDate),\n      emailFrom: item.emailFrom,\n      project: 'Kitchen Renovation', // TODO: Get from project relation\n      needsEmailResponse: item.needsEmailResponse,\n      aiConfidence: item.aiConfidence,\n      originalEmail: item.originalEmail,\n      detectedChanges: item.detectedChanges as string[] || []\n    }))\n\n    return NextResponse.json(transformedItems)\n  } catch (error) {\n    console.error('Error fetching flagged items:', error)\n    return NextResponse.json(\n      { error: 'Failed to fetch flagged items' },\n      { status: 500 }\n    )\n  }\n}\n\n// Helper function to get relative time\nfunction getRelativeTime(date: Date): string {\n  const now = new Date()\n  const diffMs = now.getTime() - date.getTime()\n  const diffHours = Math.floor(diffMs / (1000 * 60 * 60))\n  const diffDays = Math.floor(diffHours / 24)\n\n  if (diffHours < 1) {\n    return 'Just now'\n  } else if (diffHours < 24) {\n    return `${diffHours} hour${diffHours === 1 ? '' : 's'} ago`\n  } else if (diffDays === 1) {\n    return '1 day ago'\n  } else {\n    return `${diffDays} days ago`\n  }\n} "],"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","ignoreList":[]}