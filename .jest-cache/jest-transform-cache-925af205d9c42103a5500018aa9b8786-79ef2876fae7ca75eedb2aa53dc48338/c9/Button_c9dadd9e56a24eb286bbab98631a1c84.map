{"version":3,"sources":["/Users/kennyc/code/personal/nailit/app/components/ui/Button.tsx"],"sourcesContent":["import React from 'react';\nimport { cn } from '../../lib/utils';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  children: React.ReactNode;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  className,\n  children,\n  ...props\n}) => {\n  const baseStyles = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none';\n  \n  const variants = {\n    primary: 'bg-[#34A853] text-white hover:bg-[#2D9348] focus:ring-[#34A853]',\n    secondary: 'bg-[#1A73E8] text-white hover:bg-[#1557B0] focus:ring-[#1A73E8]',\n    outline: 'border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 focus:ring-[#34A853]',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-[#34A853]',\n  };\n  \n  const sizes = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-sm',\n    lg: 'px-6 py-3 text-base',\n  };\n\n  return (\n    <button\n      className={cn(baseStyles, variants[variant], sizes[size], className)}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}; "],"names":["Button","variant","size","className","children","props","baseStyles","variants","primary","secondary","outline","ghost","sizes","sm","md","lg","button","cn"],"mappings":";;;;+BASaA;;;eAAAA;;;;8DATK;uBACC;;;;;;AAQZ,MAAMA,SAAgC,CAAC,EAC5CC,UAAU,SAAS,EACnBC,OAAO,IAAI,EACXC,SAAS,EACTC,QAAQ,EACR,GAAGC,OACJ;IACC,MAAMC,aAAa;IAEnB,MAAMC,WAAW;QACfC,SAAS;QACTC,WAAW;QACXC,SAAS;QACTC,OAAO;IACT;IAEA,MAAMC,QAAQ;QACZC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,qBACE,qBAACC;QACCb,WAAWc,IAAAA,SAAE,EAACX,YAAYC,QAAQ,CAACN,QAAQ,EAAEW,KAAK,CAACV,KAAK,EAAEC;QACzD,GAAGE,KAAK;kBAERD;;AAGP"}