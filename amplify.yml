version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Environment variables check..."
        - echo "DATABASE_URL exists:" $DATABASE_URL
        - echo "DATABASE_MIGRATION_URL exists:" $DATABASE_URL
        - echo "NEXTAUTH_URL exists:" $NEXTAUTH_URL
        - |
          if [[ "$DATABASE_URL" == *"misty-frog"* ]]; then
            echo "🚀 PRODUCTION ENVIRONMENT - Formal migration workflow"
            export ENVIRONMENT="production"
          elif [[ "$DATABASE_URL" == *"raspy-sound"* ]]; then
            echo "🧪 STAGING ENVIRONMENT - Formal migration workflow"
            export ENVIRONMENT="staging"
          elif [[ "$DATABASE_URL" == *"still-paper"* ]]; then
            echo "🛠️ DEVELOPMENT ENVIRONMENT - Rapid iteration workflow"
            export ENVIRONMENT="development"
          else
            echo "❓ UNKNOWN ENVIRONMENT - Defaulting to production workflow"
            export ENVIRONMENT="production"
          fi
        - npm install --legacy-peer-deps
        - echo "Running schema drift check..."
        - npx prisma migrate diff --from-migrations ./prisma/migrations --to-schema-datamodel ./prisma/schema.prisma --shadow-database-url "$DATABASE_URL" --exit-code
        - |
          if [[ "$ENVIRONMENT" == "development" ]]; then
            echo "Pushing schema changes to development database..."
            npx prisma db push --accept-data-loss
          else
            echo "Running Prisma migrations ($ENVIRONMENT)..."
            npx prisma migrate deploy
          fi
        - echo "Generating Prisma client..."
        - npx prisma generate
    build:
      commands:
        - echo "Injecting environment variables for Next.js runtime..."
        - env | grep -e NAILIT_ENVIRONMENT >> .env.production || echo "NAILIT_ENVIRONMENT not set"
        - env | grep -e NAILIT_AWS_REGION >> .env.production || echo "NAILIT_AWS_REGION not set"  
        - env | grep -e NAILIT_IAM_ACCESS_KEY_ID >> .env.production || echo "NAILIT_IAM_ACCESS_KEY_ID not set"
        - env | grep -e NAILIT_IAM_ACCESS_KEY_SECRET >> .env.production || echo "NAILIT_IAM_ACCESS_KEY_SECRET not set"
        - env | grep -e LOG_LEVEL >> .env.production || echo "LOG_LEVEL not set"
        - env | grep -e DISABLE_CLOUDWATCH_LOGS >> .env.production || echo "DISABLE_CLOUDWATCH_LOGS not set"
        - echo "Contents of .env.production:"
        - cat .env.production || echo "No .env.production file created"
        - npm run build -- --no-lint
        - echo "=== AGGRESSIVE DEPLOYMENT OPTIMIZATION ==="
        - echo "Creating clean deployment directory..."
        - rm -rf /tmp/deploy
        - mkdir -p /tmp/deploy
        - echo "Cleaning up .next directory..."
        - rm -rf .next/cache
        - rm -rf .next/trace
        - find .next -name "*.map" -delete
        - find .next -name "*.txt" -delete
        - echo "Copying only essential Next.js files..."
        - mkdir -p /tmp/deploy/.next
        - cp -r .next/static /tmp/deploy/.next/ 2>/dev/null || echo "No static directory"
        - cp -r .next/server /tmp/deploy/.next/ 2>/dev/null || echo "No server directory"
        - cp .next/BUILD_ID /tmp/deploy/.next/ 2>/dev/null || echo "No BUILD_ID"
        - cp .next/*.json /tmp/deploy/.next/ 2>/dev/null || echo "No JSON files"
        - echo "Copying public assets..."
        - cp -r public /tmp/deploy/ 2>/dev/null || echo "No public directory"
        - echo "Creating minimal package.json..."
        - echo '{"name":"nailit","type":"module"}' > /tmp/deploy/package.json
        - echo "=== DEPLOYMENT SIZE ANALYSIS ==="
        - echo "Total deployment size:"
        - du -sh /tmp/deploy
        - echo "Breakdown by directory:"
        - du -sh /tmp/deploy/* 2>/dev/null || echo "No subdirectories"
        - echo "File count:"
        - find /tmp/deploy -type f | wc -l
        - echo "Largest files (>1MB):"
        - find /tmp/deploy -type f -size +1M -exec ls -lh {} \; 2>/dev/null || echo "No large files"
  artifacts:
    baseDirectory: /tmp/deploy
    files:
      - '.next/static/**/*'
      - '.next/server/**/*'
      - '.next/BUILD_ID'
      - '.next/*.json'
      - 'public/**/*'
      - 'package.json' 