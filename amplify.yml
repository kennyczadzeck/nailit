version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Environment variables check..."
        - echo "DATABASE_URL exists:" $DATABASE_URL
        - echo "DATABASE_MIGRATION_URL exists:" $DATABASE_MIGRATION_URL
        - echo "NEXTAUTH_URL exists:" $NEXTAUTH_URL
        - echo "Legacy DIRECT vars (should be empty):"
        - echo "  DIRECT_URL:" $DIRECT_URL
        - echo "  DATABASE_DIRECT_URL:" $DATABASE_DIRECT_URL
        - |
          if [[ "$DATABASE_URL" == *"misty-frog"* ]]; then
            echo "üöÄ PRODUCTION ENVIRONMENT - Formal migration workflow"
            export ENVIRONMENT="production"
          elif [[ "$DATABASE_URL" == *"raspy-sound"* ]]; then
            echo "üß™ STAGING ENVIRONMENT - Formal migration workflow"
            export ENVIRONMENT="staging"
          elif [[ "$DATABASE_URL" == *"still-paper"* ]]; then
            echo "üõ†Ô∏è DEVELOPMENT ENVIRONMENT - Rapid iteration workflow"
            export ENVIRONMENT="development"
          else
            echo "‚ùì UNKNOWN ENVIRONMENT - Defaulting to production workflow"
            export ENVIRONMENT="production"
          fi
        - npm install --legacy-peer-deps
        - |
          if [[ "$ENVIRONMENT" == "development" ]]; then
            echo "Pushing schema changes to development database..."
            npx prisma db push --accept-data-loss
          else
            echo "Running Prisma migrations ($ENVIRONMENT)..."
            npx prisma migrate deploy
          fi
        - echo "Generating Prisma client..."
        - npx prisma generate
    build:
      commands:
        - npm run build -- --no-lint
  artifacts:
    baseDirectory: .next
    files:
      - '**/*' 