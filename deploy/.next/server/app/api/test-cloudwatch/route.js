(()=>{var a={};a.id=4799,a.ids=[4799],a.modules={3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19771:a=>{"use strict";a.exports=require("process")},21820:a=>{"use strict";a.exports=require("os")},27910:a=>{"use strict";a.exports=require("stream")},28354:a=>{"use strict";a.exports=require("util")},29021:a=>{"use strict";a.exports=require("fs")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:a=>{"use strict";a.exports=require("path")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:a=>{"use strict";a.exports=require("crypto")},55591:a=>{"use strict";a.exports=require("https")},57075:a=>{"use strict";a.exports=require("node:stream")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73496:a=>{"use strict";a.exports=require("http2")},78335:()=>{},79428:a=>{"use strict";a.exports=require("buffer")},79551:a=>{"use strict";a.exports=require("url")},79646:a=>{"use strict";a.exports=require("child_process")},79748:a=>{"use strict";a.exports=require("fs/promises")},81630:a=>{"use strict";a.exports=require("http")},96487:()=>{},96660:(a,b,c)=>{"use strict";c.r(b),c.d(b,{patchFetch:()=>x,routeModule:()=>t,serverHooks:()=>w,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>v});var d={};c.r(d),c.d(d,{GET:()=>s});var e=c(96559),f=c(48088),g=c(37719),h=c(32190),i=c(30262),j=c(93976),k=c(8839),l=c(2312),m=c(88348),n=c(21467);class o extends l.uB.classBuilder().ep(m.S).m(function(a,b,c,d){return[(0,k.TM)(c,this.serialize,this.deserialize),(0,j.rD)(c,a.getEndpointParameterInstructions())]}).s("Logs_20140328","DescribeLogGroups",{}).n("CloudWatchLogsClient","DescribeLogGroupsCommand").f(void 0,void 0).ser(n.gP6).de(n.Ng_).build(){}var p=c(63200),q=c(41491),r=c(32495);async function s(){let a=process.env.NAILIT_ENVIRONMENT||"development",b="us-east-1",c=`/nailit/${a}/application`,d=`test-${Date.now()}`,e=[],f=[];try{let g=new i.T({region:b,credentials:process.env.NAILIT_IAM_ACCESS_KEY_ID?{accessKeyId:process.env.NAILIT_IAM_ACCESS_KEY_ID,secretAccessKey:process.env.NAILIT_IAM_ACCESS_KEY_SECRET}:void 0});e.push("✅ CloudWatch client initialized successfully");try{let b=new o({logGroupNamePrefix:`/nailit/${a}`}),c=await g.send(b);e.push(`✅ Found ${c.logGroups?.length||0} log groups with prefix /nailit/${a}`),c.logGroups?.length&&c.logGroups.forEach(a=>{e.push(`   📋 Log group: ${a.logGroupName}`)})}catch(a){f.push(`❌ Failed to describe log groups: ${a}`)}try{let a=new p.B({logGroupName:c});await g.send(a),e.push(`✅ Created log group: ${c}`)}catch(b){let a=b instanceof Error?b.message:String(b);a.includes("ResourceAlreadyExistsException")?e.push(`✅ Log group already exists: ${c}`):f.push(`❌ Failed to create log group: ${a}`)}try{let a=new q.E({logGroupName:c,logStreamName:d});await g.send(a),e.push(`✅ Created log stream: ${d}`)}catch(b){let a=b instanceof Error?b.message:String(b);f.push(`❌ Failed to create log stream: ${a}`)}try{let b=new r.A({logGroupName:c,logStreamName:d,logEvents:[{timestamp:Date.now(),message:JSON.stringify({level:"info",message:"CloudWatch test log entry",test:!0,environment:a,timestamp:new Date().toISOString()})}]});await g.send(b),e.push("✅ Successfully sent test log event to CloudWatch")}catch(b){let a=b instanceof Error?b.message:String(b);f.push(`❌ Failed to send log event: ${a}`)}}catch(b){let a=b instanceof Error?b.message:String(b);f.push(`❌ Failed to initialize CloudWatch client: ${a}`)}return h.NextResponse.json({success:0===f.length,environment:a,region:b,logGroupName:c,logStreamName:d,results:e,errors:f,environmentVariables:{NAILIT_ENVIRONMENT:process.env.NAILIT_ENVIRONMENT,NAILIT_AWS_REGION:"us-east-1",NAILIT_IAM_ACCESS_KEY_ID:process.env.NAILIT_IAM_ACCESS_KEY_ID?"[SET]":"[NOT SET]",NAILIT_IAM_ACCESS_KEY_SECRET:process.env.NAILIT_IAM_ACCESS_KEY_SECRET?"[SET]":"[NOT SET]",AWS_REGION:process.env.AWS_REGION},timestamp:new Date().toISOString()})}let t=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/test-cloudwatch/route",pathname:"/api/test-cloudwatch",filename:"route",bundlePath:"app/api/test-cloudwatch/route"},distDir:".next",projectDir:"",resolvedPagePath:"/Users/kennyc/code/personal/nailit/app/api/test-cloudwatch/route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:u,workUnitAsyncStorage:v,serverHooks:w}=t;function x(){return(0,g.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:v})}}};var b=require("../../../webpack-runtime.js");b.C(a);var c=a=>b(b.s=a),d=b.X(0,[7719,580,8667],()=>c(96660));module.exports=d})();